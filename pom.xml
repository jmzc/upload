<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.olsms</groupId>
  <artifactId>upload</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <dependencies>

  	
	
	<!-- 
	The artifact com.sun:tools:jar:1.5.0 is a jar from the JDK (not the JRE). This jar is not available in any maven repository but is located in <JDK_HOME>/lib. That's why you get this error.
	When you specify an exclusion, maven won't try to find the jar (and so it won't fail).
	Struts2 requires this dependency at compile time (not at runtime).
	So setting an exclusion is the correct way of getting rid of this problem. Since maven need a JDK to run: the tools.jar will be available anyway when compiling the project.
	 -->
	<!--  2.0.11 -->
  	<dependency>
	<groupId>org.apache.struts</groupId>
	<artifactId>struts2-core</artifactId>
	<version>2.0.11</version>
	 <exclusions>
            <exclusion>
                <artifactId>tools</artifactId>
                <groupId>com.sun</groupId>
            </exclusion>
        </exclusions>
	</dependency>
	
	<dependency>
		<groupId>com.opensymphony</groupId>
		<artifactId>xwork</artifactId>
		<version>2.0.4</version>
	</dependency>
            
	
	<!--  -->
	<dependency>
	    <groupId>commons-fileupload</groupId>
	    <artifactId>commons-fileupload</artifactId>
	    <version>1.1.1</version>
	</dependency>
	<dependency>
	    <groupId>commons-io</groupId>
	    <artifactId>commons-io</artifactId>
	    <version>1.0</version>
	</dependency>
	
	
	<!--  -->
	<dependency>
		<groupId>jstl</groupId>
		<artifactId>jstl</artifactId>
		<version>1.2</version>
	</dependency>


	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>2.0.7</version>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>2.0.7</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>
		</exclusions>
	</dependency>
	
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jpa</artifactId>
		<version>2.0.7</version>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>2.0.7</version>
	</dependency>

	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>2.0.7</version>
	</dependency>
         
         
         <dependency>
	<groupId>org.springframework</groupId>
	<artifactId>spring-aspects</artifactId>
	<version>2.0.7</version>
</dependency>
               
                    

	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>3.3.1.GA</version>
	</dependency>
	
	<dependency>
	<groupId>org.hibernate</groupId>
	<artifactId>hibernate-annotations</artifactId>
	<version>3.3.1.GA</version>
	</dependency>

	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>3.3.1.ga</version>
	</dependency>
            


	<dependency>
		<groupId>org.postgresql</groupId>
		<artifactId>postgresql</artifactId>
		<version>9.2-1003-jdbc4</version>
	</dependency>

	<dependency>
		<groupId>net.sf.opencsv</groupId>
		<artifactId>opencsv</artifactId>
		<version>2.0</version>
	</dependency>

	  
	 <!--  XSL 2003 -->
	 <!-- 
	<dependency>
		<groupId>net.sourceforge.jexcelapi</groupId>
		<artifactId>jxl</artifactId>
		<version>2.6.12</version>
	</dependency>
	 -->
	
	
	

	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi</artifactId>
		<version>3.9</version>
	</dependency>

	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-ooxml</artifactId>
		<version>3.9</version>
	</dependency>
                     
            
    <dependency>
	<groupId>log4j</groupId>
	<artifactId>log4j</artifactId>
	<version>1.2.17</version>
</dependency>
            
            
  
  </dependencies>
  
  <pluginRepositories>
   		<pluginRepository>
		      <id>apache-snapshots</id>
		      <name>Apache SNAPSHOT Repository</name>
		      <url>http://repository.apache.org/snapshots/</url>
		      <snapshots>
		         <enabled>true</enabled>
		      </snapshots>
   		</pluginRepository>
	</pluginRepositories>
	

    <build>
    
    <!-- <pluginManagement> section overrides aspects of the configuration of plugins, but doesn't actually enable them for use-->
	   <!--The configuration of this plugin is used to store the Eclipse M2E settings only. It has no influence on the Maven build itself. -->
	   
		    <pluginManagement>
		    <plugins>
			    <plugin>
			            <groupId>org.eclipse.m2e</groupId>
			              <artifactId>lifecycle-mapping</artifactId>
			              <version>1.0.0</version>
			              <configuration>
			                <lifecycleMappingMetadata>
			                 <pluginExecutions>
			                    <pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>buildnumber-maven-plugin</artifactId>
										<goals>
											<goal>create-timestamp</goal>
										</goals>
										<versionRange>[1.2,)</versionRange>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
			                  </pluginExecutions>
			                </lifecycleMappingMetadata>
			              </configuration>
				    </plugin>
				  </plugins>
				</pluginManagement>
				
			<finalName>upload</finalName>
            <plugins>
                <plugin>
                
                
                    <!-- mvn clean install tomcat:run-war to deploy
                         Look for "Running war on http://xxx" and "Setting the server's publish address to be /yyy" in console output; 
                         WSDL browser address will be concatenation of the two: http://xxx/yyy?wsdl
                    -->
				
                    <groupId>org.apache.tomcat.maven</groupId>
                   <!-- <artifactId>tomcat7-maven-plugin</artifactId>  --> 
                    <artifactId>tomcat6-maven-plugin</artifactId>
   					<version>2.1</version>
                    <executions>
                    	<!-- 
                        <execution>
                            <id>deploy-tomcat-embbebed</id>
                            <goals>
                                <goal>run-war</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <port>8080</port>
                                <fork>true</fork>
                                <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                            </configuration>
                        </execution>
                         -->
                         
                         
                         
                         <!--  <role rolename="manager-script"/>  -->
                            
                        <execution>
                            <id>deploy-tomcat</id>
                            <goals>   
                            	<goal>undeploy</goal>     <!-- >= 2.1 -->                   
                                <goal>deploy</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <username>tomcat</username>
                                <password>tomcat</password>
                               <!--  <url>http://localhost:8080/manager/text</url> -->   <!-- Tomcat 7 -->        
                            </configuration>
                        </execution>
                        
                        
                        
                    </executions>
                    
                </plugin>
                
           
                
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>1.6</source>
                        <target>1.6</target>
                        <debug>false</debug>
                    </configuration>
                </plugin>
                
                
                <plugin>
					<groupId>org.codehaus.mojo</groupId>
			        <artifactId>buildnumber-maven-plugin</artifactId>
			        <version>1.2</version>
			        <configuration>
			          <timestampFormat>yyyy-MM-dd HH:mm:ss</timestampFormat>
			        </configuration>
			        <executions>
			          <execution>
			            <goals>
			              <goal>create-timestamp</goal>
			            </goals>
			          </execution>
			        </executions>
				</plugin> 
				
                <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>		
					<warSourceDirectory>WebContent</warSourceDirectory>        
		         	<failOnMissingWebXml>true</failOnMissingWebXml>
		         	<archive>            
	                	<manifestEntries> 
							<Build-Date>${timestamp}</Build-Date> 
                         </manifestEntries> 
        			</archive>
		        </configuration>
				</plugin>
                

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <configuration>
                        <projectNameTemplate>[artifactId]-[version]</projectNameTemplate>
                        <wtpmanifest>true</wtpmanifest>
                        <wtpapplicationxml>true</wtpapplicationxml>
                        <wtpversion>2.0</wtpversion>
                    </configuration>
                </plugin>
                
                
                <!--  test -->
                 
                              
           </plugins>
         
   </build>  
	<!--  
  <build>
    <sourceDirectory>src</sourceDirectory>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <warSourceDirectory>WebContent</warSourceDirectory>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>
  -->
</project>